{
  "openapi": "3.0.3",
  "info": {
    "title": "SalesSparrow Account Tasks API's",
    "description": "Following api's will be called from the SalesSparrow application",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sales.truesparrow.com"
    }
  ],
  "paths": {
    "/api/v1/accounts/{account_id}/tasks": {
      "post": {
        "description": "Api will create task",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "crm_organization_user_id": {
                    "type": "string",
                    "example": "00U1e000003TnVXEA1"
                  },
                  "description": {
                    "type": "string",
                    "example": "Complete remaining task"
                  },
                  "due_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2023-07-21"
                  }
                },
                "required": [
                  "crm_organization_user_id",
                  "description",
                  "due_date"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string",
                      "example": "00U1e000003TnVXEA0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Api will return list of tasks for accountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "00U1e000003TUB8EAO"
                      }
                    },
                    "task_map_by_id": {
                      "type": "object",
                      "properties": {
                        "00U1e000003TUB8EAO": {
                          "type": "object",
                          "properties": null,
                          "$ref": "#/components/schemas/task"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/current": {
      "get": {
        "description": "Api will return current user entity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "0caa56f9-2abd-45b2-8469-e41d3e692eaa"
                        },
                        "name": {
                          "type": "string",
                          "example": "sample user"
                        },
                        "email": {
                          "type": "string",
                          "example": "sampleuser@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "get": {
        "description": "Api will return the list of accounts",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Account Search String",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_ids": {
                      "type": "array",
                      "description": "List of account IDs",
                      "items": {
                        "type": "string",
                        "example": "abc1234abc"
                      }
                    },
                    "account_map_by_id": {
                      "type": "object",
                      "description": "Map of accounts by ID",
                      "properties": {
                        "abc1234abc": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID",
                              "example": "abc123abc"
                            },
                            "name": {
                              "type": "string",
                              "description": "Account name",
                              "example": "Sample account"
                            },
                            "additional_fields": {
                              "type": "object",
                              "description": "Additional fields for the account",
                              "properties": {
                                "website": {
                                  "type": "string",
                                  "description": "Website url (Optional)",
                                  "example": "www.xyz.com"
                                }
                              }
                            },
                            "account_contact_associations_id": {
                              "type": "string",
                              "description": "ID of associated account contact association (Optional)",
                              "example": "abc123abc"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/feed": {
      "get": {
        "description": "Api will return the paginated account feed details",
        "parameters": [
          {
            "name": "pagination_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "xyz"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_ids": {
                      "type": "array",
                      "description": "List of account IDs",
                      "items": {
                        "type": "string",
                        "example": "abc1234abc"
                      }
                    },
                    "account_map_by_id": {
                      "type": "object",
                      "description": "Map of accounts by ID",
                      "properties": {
                        "abc1234abc": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID",
                              "example": "abc123abc"
                            },
                            "name": {
                              "type": "string",
                              "description": "Account name",
                              "example": "Sample account"
                            },
                            "additional_fields": {
                              "type": "object",
                              "description": "Additional fields for the account",
                              "properties": {
                                "website": {
                                  "type": "string",
                                  "description": "Website url (Optional)",
                                  "example": "www.xyz.com"
                                }
                              }
                            },
                            "account_contact_associations_id": {
                              "type": "string",
                              "description": "ID of associated account contact association (Optional)",
                              "example": "abc123abc"
                            }
                          }
                        }
                      }
                    },
                    "contact_map_by_id": {
                      "type": "object",
                      "description": "Map of contacts by ID",
                      "properties": {
                        "abcd1234abcd": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Contact ID",
                              "example": "abcd1234abcd"
                            },
                            "name": {
                              "type": "string",
                              "description": "Contact name",
                              "example": "Sample contact name"
                            },
                            "additional_fields": {
                              "type": "object",
                              "description": "Additional fields for the contact",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "Email Id (Optional)",
                                  "example": "xyz@gmail.com"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "account_contact_associations_map_by_id": {
                      "type": "object",
                      "description": "Map of account contact associations by ID",
                      "properties": {
                        "abc1234abc": {
                          "type": "object",
                          "properties": {
                            "contact_ids": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "abcd1234abcd"
                              },
                              "description": "List of contact IDs associated with the account"
                            }
                          }
                        }
                      }
                    },
                    "next_page_payload": {
                      "type": "object",
                      "description": "Payload for next page of data (if applicable)",
                      "properties": {
                        "pagination_identifier": {
                          "type": "string",
                          "example": "xyz"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/crm-organization-users": {
      "get": {
        "description": "Api will return the list of CRM organization users",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "User Search String",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "crm_organization_user_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "00T1e000007mB43EAE"
                        ]
                      }
                    },
                    "crm_organization_user_map_by_id": {
                      "type": "object",
                      "properties": {
                        "00T1e000007mB43EAE": {
                          "type": "object",
                          "properties": null,
                          "$ref": "#/components/schemas/crm_organization_user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{account_id}/notes": {
      "post": {
        "description": "Api will create note for accountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "Content of note"
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_id": {
                      "type": "string",
                      "example": "0691e000001WXlcAAG"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Api will return list of notes for accountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "0691e000001WXlcAAG"
                      }
                    },
                    "note_map_by_id": {
                      "type": "object",
                      "description": "Map of notes by ID",
                      "properties": {
                        "0691e000001WXlcAAG": {
                          "type": "object",
                          "properties": null,
                          "$ref": "#/components/schemas/note"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{account_id}/notes/{note_id}": {
      "get": {
        "description": "Fetch details of note by note id.",
        "parameters": [
          {
            "name": "account_id",
            "description": "Account Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_id",
            "description": "Note Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "note_detail": {
                      "type": "object",
                      "properties": null,
                      "$ref": "#/components/schemas/note_detail"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete note for the given note id.",
        "parameters": [
          {
            "name": "account_id",
            "description": "Account Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_id",
            "description": "Note Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/suggestions/crm-actions": {
      "post": {
        "description": "Api will return suggestions for tasks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "The text for which to receive task suggestions"
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "add_task_suggestions": {
                      "$ref": "#/components/schemas/add_task_suggestions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{account_id}/tasks/{task_id}": {
      "delete": {
        "description": "Delete task for the given task id.",
        "parameters": [
          {
            "name": "account_id",
            "description": "Account Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task_id",
            "description": "Task Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/demo_error": {
      "get": {
        "description": "Api will return list of tasks for accountId",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account Id",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 10,
              "maxLength": 10
            }
          },
          {
            "name": "err_id",
            "in": "query",
            "description": "Account Id",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          },
          {
            "name": "err_id1",
            "in": "query",
            "description": "Account Id",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "00U1e000003TUB8EAO"
                      }
                    },
                    "task_map_by_id": {
                      "type": "object",
                      "properties": {
                        "00U1e000003TUB8EAO": {
                          "type": "object",
                          "properties": null,
                          "$ref": "#/components/schemas/task"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_401"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_404"
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "current_user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0caa56f9-2abd-45b2-8469-e41d3e692eaa"
          },
          "name": {
            "type": "string",
            "example": "sample user"
          },
          "email": {
            "type": "string",
            "example": "sampleuser@gmail.com"
          }
        }
      },
      "account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Account ID",
            "example": "abc123abc"
          },
          "name": {
            "type": "string",
            "description": "Account name",
            "example": "Sample account"
          },
          "additional_fields": {
            "type": "object",
            "description": "Additional fields for the account",
            "properties": {
              "website": {
                "type": "string",
                "description": "Website url (Optional)",
                "example": "www.xyz.com"
              }
            }
          },
          "account_contact_associations_id": {
            "type": "string",
            "description": "ID of associated account contact association (Optional)",
            "example": "abc123abc"
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Contact ID",
            "example": "abcd1234abcd"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Sample contact name"
          },
          "additional_fields": {
            "type": "object",
            "description": "Additional fields for the contact",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email Id (Optional)",
                "example": "xyz@gmail.com"
              }
            }
          }
        }
      },
      "account_contact_association": {
        "type": "object",
        "properties": {
          "contact_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "abcd1234abcd"
            },
            "description": "List of contact IDs associated with the account"
          }
        }
      },
      "next_page_payload": {
        "type": "object",
        "description": "Payload for next page of data (if applicable)",
        "properties": {
          "pagination_identifier": {
            "type": "string",
            "example": "xyz"
          }
        }
      },
      "add_task_suggestions": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of the task",
              "example": "Call John Doe"
            },
            "due_date": {
              "type": "string",
              "description": "Optional. The due date for the task in YYYY-MM-DD format.",
              "format": "date",
              "example": "2023-07-20"
            }
          },
          "required": [
            "description"
          ]
        }
      },
      "note": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0691e000001WXlcAAG"
          },
          "creator": {
            "type": "string",
            "example": "xyz"
          },
          "text_preview": {
            "type": "string",
            "example": "Note Full Content"
          },
          "last_modified_time": {
            "type": "string",
            "format": "date-time",
            "example": "2019-10-12T07:20:50.52Z"
          }
        }
      },
      "note_detail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0691e000001WXlcAAG"
          },
          "creator": {
            "type": "string",
            "example": "xyz"
          },
          "text": {
            "type": "string",
            "example": "Note Full Content"
          },
          "last_modified_time": {
            "type": "string",
            "format": "date-time",
            "example": "2019-10-12T07:20:50.52Z"
          }
        }
      },
      "task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00U1e000003TUB8EAO"
          },
          "creator_name": {
            "type": "string",
            "example": "xyz"
          },
          "crm_organization_user_name": {
            "type": "string",
            "example": "abc"
          },
          "description": {
            "type": "string",
            "example": "Complete remaining task"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "example": "2019-10-12"
          },
          "last_modified_time": {
            "type": "string",
            "format": "date-time",
            "example": "2019-10-12T07:20:50.52Z"
          }
        }
      },
      "crm_organization_user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "00T1e000007mB43EAE"
          },
          "name": {
            "type": "string",
            "example": "name1"
          }
        }
      },
      "param_errors": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "example": "redirect_uri"
          },
          "param_error_identifier": {
            "type": "string",
            "example": "invalid_redirect_uri"
          },
          "message": {
            "type": "string",
            "example": "Invalid redirect URI. Please double check and try again."
          }
        }
      },
      "response_400": {
        "type": "object",
        "properties": {
          "http_code": {
            "type": "string",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "At least one parameter is invalid or missing."
          },
          "code": {
            "type": "string",
            "example": "INVALID_PARAMS"
          },
          "internal_error_identifier": {
            "type": "string",
            "example": "b_2"
          },
          "param_errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/param_errors"
            }
          }
        }
      },
      "response_401": {
        "type": "object",
        "properties": {
          "http_code": {
            "type": "string",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized API request. Please check your API key."
          },
          "code": {
            "type": "string",
            "example": "UNAUTHORIZED"
          },
          "internal_error_identifier": {
            "type": "string",
            "example": "a_b_c_1"
          },
          "param_errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      },
      "response_404": {
        "type": "object",
        "properties": {
          "http_code": {
            "type": "string",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Resource not found. Please check if the resource identifier passed in the URL is valid and try again."
          },
          "code": {
            "type": "string",
            "example": "NOT_FOUND"
          },
          "internal_error_identifier": {
            "type": "string",
            "example": "a_b_c_1"
          },
          "param_errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      },
      "response_500": {
        "type": "object",
        "properties": {
          "http_code": {
            "type": "string",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Something went wrong."
          },
          "code": {
            "type": "string",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "internal_error_identifier": {
            "type": "string",
            "example": "a_b_c_1"
          },
          "param_errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": []
          }
        }
      }
    }
  }
}